doubleMe x = x + x

f 1 = 8
f 4 = 131
f 16 = 16

g n | n == 8 = 16
    | n == 16 = 4
    | n == 131 = 1

h = (f . g)

k = (g . f)

maximo3 :: Int -> Int -> Int -> Int
maximo3 x y z | x > y && x > z = x
                | y > x && y > z = y
                | z > x && z > y = z
{- Especificación
problema maximo3(x, y, z : Z) : Z {
    requiere: {True}
    asegura: {(res = x) ó (res = y) ó (res = z)}
    }
-}

sumaDistintos :: Int -> Int -> Int -> Int
sumaDistintos x y z | x /= y && x /= z && y /= z = x+y+z
                    | x == y && x == z = x
                    | x == y && x /= z = x+z
                    | x /= y && x == z = x+y
                    | y == z && y /= x = x+y

digitoUnidades :: Int-> Int
digitoUnidades x | x > 0 = x `mod` 10 

digitoDecenas :: Int -> Int
digitoDecenas x | x > 0 = (x `div` 10) `mod` 10

todoMenor :: (Float, Float) -> (Float, Float) -> Bool
todoMenor a b | (fst a < fst b) && (snd a < snd b) = True
                | otherwise = False
